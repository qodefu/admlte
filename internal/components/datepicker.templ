package components

import "goth/internal/middleware"
import "fmt"

func Push(name string) templ.Component{
    return templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
        reqscope := middleware.ReqScope(ctx)
        childcomp := templ.GetChildren(ctx)
        reqscope.Push(name, childcomp)
		_, err := io.WriteString(w, "")
		return err
	})
}

func Stack(name string) templ.Component {
    return templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
        reqscope := middleware.ReqScope(ctx)
        for _, c := range reqscope.Stack(name) {
            c.Render(ctx, w)
        }

        return nil
    })
}

func Js(script string, a ...any) templ.Component {
    return templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		_, err := io.WriteString(w, fmt.Sprintf(script, a...))
        return err
    })
}

type srvData struct {
    PickerId string

}

templ DatePicker(name ,id string) {
	<input 
           type="text" 
           name={name} 
           class="form-control datetimpicker-input" 
           data-toggle="datetimepicker" 
           data-target={"#"+id}
           id={id}/>
    @Push("js") {
// This is ugly, I am sorry....
        @Js(`
        <script type="text/javascript">
            $("#%s").datetimepicker({
                format: "L"
            })
        </script>
       `, id))
    }

}

templ TimePicker(name ,id string) {
	<input 
           type="text" 
           name={name} 
           class="form-control datetimpicker-input" 
           data-toggle="datetimepicker" 
           data-target={"#"+id}
           id={id}/>
    @Push("js") {
// This is ugly, I am sorry....
        @Js(`
        <script type="text/javascript">
            $("#%s").datetimepicker({
                format: "LT"
            })
        </script>
       `, id))
    }

}
